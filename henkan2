#!/usr/bin/env python3
#

from i3ipc import Connection
from tkinter import Tk, Label, StringVar
from subprocess import run
#from time import sleep

i3 = Connection()

class GUI:
    def __init__(self, master):
        self.master = master

        #self.mode = 'default'
        #self.i = 0

        self.label_text = StringVar()
        self.label = Label(master, justify='left', textvariable=self.label_text)
        self.label.pack()
        workspaces = i3.get_workspaces()
        workspaces.sort(key=lambda workspace: workspace['name'])
        text = ''
        print(workspaces)
        for dict in workspaces:
            text= text + dict['name']
            if dict['focused']:
                text = text + ' *' 
            if dict['urgent']:
                text = text + ' !' 
            text = text + '\n'
        text = text[:-1]
        self.label_text.set(text)

    def workspace(self, event):
        i3.command('workspace' + event.keysym)
        root.destroy()
        
    def i3_d(self, event, command):
        root.withdraw()
        i3.command(command)
        #root.deiconify()
        root.destroy()

    def i3_self(self, event, command):
        i3.command(command)

    def bash(self, event, command):
        root.withdraw()
        command = command.split()
        run(command)
        root.destroy()

root = Tk()
root.attributes('-type', 'dialog')
my_gui = GUI(root)

root.bind('0', my_gui.workspace)
root.bind('1', my_gui.workspace)
root.bind('2', my_gui.workspace)
root.bind('3', my_gui.workspace)
root.bind('4', my_gui.workspace)
root.bind('5', my_gui.workspace)
root.bind('6', my_gui.workspace)
root.bind('7', my_gui.workspace)
root.bind('8', my_gui.workspace)
root.bind('9', my_gui.workspace)
root.bind('a', my_gui.workspace)
root.bind('b', my_gui.workspace)
root.bind('c', my_gui.workspace)
root.bind('d', my_gui.workspace)
root.bind('e', my_gui.workspace)
root.bind('f', my_gui.workspace)
root.bind('g', my_gui.workspace)
root.bind('h', lambda e: my_gui.i3_d(e, command='focus left'))
root.bind('i', my_gui.workspace)
root.bind('j', lambda e: my_gui.i3_d(e, command='mode henkan'))
root.bind('k', my_gui.workspace)
root.bind('l', lambda e: my_gui.i3_d(e, command='focus right'))
root.bind('m', lambda e: my_gui.bash(e, command='lt m'))
root.bind('n', my_gui.workspace)
root.bind('o', my_gui.workspace)
root.bind('p', lambda e: my_gui.bash(e, command='lt p'))
root.bind('q', lambda e: my_gui.i3_d(e, command='kill'))
root.bind('r', my_gui.workspace)
root.bind('s', my_gui.workspace)
root.bind('t', my_gui.workspace)
root.bind('u', my_gui.workspace)
root.bind('v', my_gui.workspace)
root.bind('w', my_gui.workspace)
root.bind('x', my_gui.workspace)
root.bind('y', my_gui.workspace)
root.bind('z', my_gui.workspace)
root.bind('.', lambda e: my_gui.bash(e, command='urxvtc'))
root.bind('<ISO_Level2_Latch>', lambda e: my_gui.bash(e, command='lt 2'))
root.bind('<ISO_Level3_Latch>', lambda e: my_gui.bash(e, command='lt 3'))
root.bind('<ISO_Level5_Latch>', lambda e: my_gui.bash(e, command='lt 5'))
root.bind('<Escape>', lambda e: root.destroy())
root.bind("<Button-1>", lambda e: my_gui.i3_self(e, command='border normal 0'))
root.mainloop()
